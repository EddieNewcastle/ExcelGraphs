import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
import matplotlib as mpl

#ImportingExcelFiles
Variable= pd.read_csv('NameOfFile.csv')

#ShowingTheFile
Variable

#ChangingColumnNames
Variable['OldColumnName'].replace([x,y,z],['a,b,c'],inplace=True)

#ChangingAllResultsInTheColumn (multiplying by 1000)
Variable['x']=variable['x']*1000

#RenamingTheColumns
Variable.rename(columns= {'x':'xx'},inplace=True)

#AddingColumnFromTwoColumnsInGraph
Variable['xy']= variable['x']*variable['y'] #(CAN REPLACE WITH INTERGERS)

#TakingJustTheValuesFromAColumn(TakingValuesJustFromYear2021)
df=Variable[(Variable['Year']==2021)]
#ConvertingToAnExcelFile
df.to_excel(NameOfFile.xlsx',sheet_name'SheetName')

#ImportingExcelFileForProducingAGraph
Variable= pd.read_csv('NameOfFile.csv')
Variable
#ProducingALineGraph
ax,fig=plt.subplots(figsize=(10,5))
x= Variable['ColumnName1']
y= Variable['ColumnName2']
plt.plot(x,y)
plt.title('TitleOfTheGraph')
plt.savefig('TitleOfSavingFile.png', dpi=1000)
plt.show()

#ImportingExcelFileForProducingAGraph
Variable= pd.read_csv('NameOfFile.csv')
Variable
#ProducingALineGraphWithSubPlots
info= Variable
ax,fig=plt.subplots(figsize=(10,5))
sns.pointplot(x='ColumnName1',y='ColumnName2',data=info)
plt.title('TitleOfGraph')
plt.savefig('TitleOfSavingFile.png',dpi=500)
plt.show()

#ImportingExcelFileForProducingAGraph
Variable= pd.read_csv('NameOfFile.csv')
Variable
#ProducingAVerticalBarChart
info= Variable
ax,fig=plt.subplots(figsize=(10,5))
sns.barplot(x='ColumnName1',y='ColumnName2',data=info)
plt.title('TitleOfGraph')
plt.tight_layout()
plt.savefig('TitleOfSavingFile.png',dpi=1000)
plt.show()

#ImportingExcelFileForProducingAGraph
Variable= pd.read_csv('NameOfFile.csv')
Variable
#ProducingADoughnutChart
ax,fig=plt.subplots(figsize=(6,4),dpi=200)
values2 = Variable['ColumnName1']
labels_ = Variable['ColumnName2']

explode= (0.05,0.05,0.05,0.05,0.05,0.05,0.05,
          0.05,0.05,0.05,0.05,0.05,0.05,0.05)

plt.pie(values2,labels=labels_,autopct='%1.0f%%',
       startangle=90,pctdistance=0.85)
centre_circle= plt.Circle((0,0),0.50,fc='white')
fig= plt.gcf()
fig.gca().add_artist(centre_circle)
plt.axis('equal')

plt.tight_layout()
plt.title('TitleOfGraph')
plt.show()









